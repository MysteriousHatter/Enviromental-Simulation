{
  "api/SoyWar.SimplePlantGrowth.DatabaseAsset.html": {
    "href": "api/SoyWar.SimplePlantGrowth.DatabaseAsset.html",
    "title": "Class DatabaseAsset | SoyWar - Simple Plant Growth",
    "keywords": "Class DatabaseAsset Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object ScriptableObject / Implemented in: SoyWar.SimplePlantGrowth.dll Description Stores all persisted plant assets. Syntax [CreateAssetMenu(fileName = \"Plant Growth Phase Database\", menuName = \"Simple Plant Growth/Database\", order = 1000)] public sealed class DatabaseAsset : ScriptableObject Properties Grass Persisted grass assets. Declaration public GrassAsset[] Grass { get; } Property Value Type Description GrassAsset [] Trees Persisted tree assets. Declaration public TreeAsset[] Trees { get; } Property Value Type Description TreeAsset []"
  },
  "api/SoyWar.SimplePlantGrowth.GrassAsset.html": {
    "href": "api/SoyWar.SimplePlantGrowth.GrassAsset.html",
    "title": "Class GrassAsset | SoyWar - Simple Plant Growth",
    "keywords": "Class GrassAsset Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object ScriptableObject PlantAsset < GrassAsset > / Implemented in: SoyWar.SimplePlantGrowth.dll Syntax [CreateAssetMenu(fileName = \"Grass Growth Phase\", menuName = \"Simple Plant Growth/Grass\", order = 1001)] public sealed class GrassAsset : PlantAsset<GrassAsset> Properties AlignToGround Declaration public float AlignToGround { get; set; } Property Value Type Description Single DetailDensity Declaration public float DetailDensity { get; set; } Property Value Type Description Single DryTint Tint when the grass is \"dry\". Declaration public Color DryTint { get; set; } Property Value Type Description Color Remarks When a value is set, enables random tint. HealthyTint Tint when the grass is \"healthy\". Declaration public Color HealthyTint { get; set; } Property Value Type Description Color Remarks When a value is set, enables random tint. HoleEdgePadding Declaration public float HoleEdgePadding { get; set; } Property Value Type Description Single NoiseSeed Declaration public int NoiseSeed { get; set; } Property Value Type Description Int32 NoiseSpread Declaration public float NoiseSpread { get; set; } Property Value Type Description Single PositionJitter Declaration public float PositionJitter { get; set; } Property Value Type Description Single RandomTint Activates random tint. Declaration public bool RandomTint { get; set; } Property Value Type Description Boolean RenderMode Declaration public DetailRenderMode RenderMode { get; set; } Property Value Type Description DetailRenderMode TargetCoverage Declaration public float TargetCoverage { get; set; } Property Value Type Description Single Texture Declaration public Texture2D Texture { get; set; } Property Value Type Description Texture2D Tint Grass tint Declaration public Color Tint { get; set; } Property Value Type Description Color Remarks When a value is set, disables random tint. UseDensityScaling Declaration public bool UseDensityScaling { get; set; } Property Value Type Description Boolean UseInstancing Declaration public bool UseInstancing { get; set; } Property Value Type Description Boolean UsePrototypeMesh Checks whether prototype must be used instead of texture. Declaration public bool UsePrototypeMesh { get; set; } Property Value Type Description Boolean Methods CopyFrom(GrassAsset) Declaration protected override void CopyFrom(GrassAsset asset) Parameters Type Name Description GrassAsset asset Overrides SoyWar.SimplePlantGrowth.PlantAsset<SoyWar.SimplePlantGrowth.GrassAsset>.CopyFrom(SoyWar.SimplePlantGrowth.GrassAsset) Operators Implicit(GrassAsset to DetailPrototype) Convert GrassAsset to DetailPrototype. Declaration public static implicit operator DetailPrototype(GrassAsset grassAsset) Parameters Type Name Description GrassAsset grassAsset Returns Type Description DetailPrototype Implicit(DetailPrototype to GrassAsset) Convert DetailPrototype to GrassAsset. Declaration public static implicit operator GrassAsset(DetailPrototype detailPrototype) Parameters Type Name Description DetailPrototype detailPrototype Returns Type Description GrassAsset"
  },
  "api/SoyWar.SimplePlantGrowth.GrassComponent.html": {
    "href": "api/SoyWar.SimplePlantGrowth.GrassComponent.html",
    "title": "Class GrassComponent | SoyWar - Simple Plant Growth",
    "keywords": "Class GrassComponent Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object Component Behaviour MonoBehaviour PlantComponent < GrassAsset , Vector2Int , GrassData > / Implemented in: SoyWar.SimplePlantGrowth.dll Syntax [AddComponentMenu(\"Simple Plant Growth/Grass Growth Terrain Manager\")] public sealed class GrassComponent : PlantComponent<GrassAsset, Vector2Int, GrassData> Methods AddInstances(GrassAsset, Vector2Int[]) Grass instances to include from the growth process. Declaration public void AddInstances(GrassAsset grassAsset, params Vector2Int[] instances) Parameters Type Name Description GrassAsset grassAsset Vector2Int [] instances Remarks The asset associated with the instance must have been added beforehand. AddInstances(Int32, Vector2Int[]) Grass instances to include from the growth process. Declaration public void AddInstances(int indexPrototype, params Vector2Int[] instances) Parameters Type Name Description Int32 indexPrototype Vector2Int [] instances Remarks The asset associated with the instance must have been added beforehand. RemoveInstances(GrassAsset, Vector2Int[]) Grass instances to exclude from the growth process. Declaration public void RemoveInstances(GrassAsset grassAsset, params Vector2Int[] instances) Parameters Type Name Description GrassAsset grassAsset Vector2Int [] instances RemoveInstances(Int32, Vector2Int[]) Grass instances to exclude from the growth process. Declaration public void RemoveInstances(int indexPrototype, params Vector2Int[] instances) Parameters Type Name Description Int32 indexPrototype Vector2Int [] instances"
  },
  "api/SoyWar.SimplePlantGrowth.GrassData.html": {
    "href": "api/SoyWar.SimplePlantGrowth.GrassData.html",
    "title": "Struct GrassData | SoyWar - Simple Plant Growth",
    "keywords": "Struct GrassData Related to: SoyWar.SimplePlantGrowth / Implemented in: SoyWar.SimplePlantGrowth.dll Implements interfaces: IEquatable < GrassData > , IComparable < GrassData > , Syntax public struct GrassData : IEquatable<GrassData>, IComparable<GrassData> Constructors GrassData(Single, Int32) Declaration public GrassData(float time, int amount) Parameters Type Name Description Single time Int32 amount Fields Amount Amount of grass at this position. Declaration public int Amount Field Value Type Description Int32 Time Time before reaching the next phase. Declaration public float Time Field Value Type Description Single Methods CompareTo(GrassData) Declaration public int CompareTo(GrassData other) Parameters Type Name Description GrassData other Returns Type Description Int32 Equals(GrassData) Declaration public bool Equals(GrassData other) Parameters Type Name Description GrassData other Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Implements System.IEquatable<T> System.IComparable<T>"
  },
  "api/SoyWar.SimplePlantGrowth.html": {
    "href": "api/SoyWar.SimplePlantGrowth.html",
    "title": "Namespace SoyWar.SimplePlantGrowth | SoyWar - Simple Plant Growth",
    "keywords": "Namespace SoyWar.SimplePlantGrowth Classes DatabaseAsset Stores all persisted plant assets. GrassAsset GrassComponent ManagerComponent PlantAsset<T> Represents all kind of plants. PlantComponent<T1, T2, T3> TreeAsset TreeComponent Structs GrassData"
  },
  "api/SoyWar.SimplePlantGrowth.ManagerComponent.html": {
    "href": "api/SoyWar.SimplePlantGrowth.ManagerComponent.html",
    "title": "Class ManagerComponent | SoyWar - Simple Plant Growth",
    "keywords": "Class ManagerComponent Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object Component Behaviour MonoBehaviour / Implemented in: SoyWar.SimplePlantGrowth.dll Syntax [DisallowMultipleComponent] [AddComponentMenu(\"Simple Plant Growth/Plant Growth Phase Manager\")] [DefaultExecutionOrder(-100)] public sealed class ManagerComponent : MonoBehaviour Properties Database Database storing all persisted plant assets. Declaration public DatabaseAsset Database { get; } Property Value Type Description DatabaseAsset Dynamic Takes into account external modifications made in the terrain. Declaration public bool Dynamic { get; set; } Property Value Type Description Boolean Remarks The value is only taken into account when the terrain is instantiated. InitAuto Enables automatic tracking of assets existing on the targeted terrain during initialization. Declaration public bool InitAuto { get; set; } Property Value Type Description Boolean Remarks The value is only taken into account when the terrain is instantiated. Persistent Keep terrain changes in editor mode. Declaration public bool Persistent { get; set; } Property Value Type Description Boolean Remarks The value is only taken into account when the terrain is instantiated. TimeOffset Relative time offset to be added to the global time. Declaration public float TimeOffset { get; set; } Property Value Type Description Single Methods SetTimer(Func<Single>) Set a custom Timer. Declaration public void SetTimer(Func<float> timer) Parameters Type Name Description Func < Single > timer"
  },
  "api/SoyWar.SimplePlantGrowth.PlantAsset-1.html": {
    "href": "api/SoyWar.SimplePlantGrowth.PlantAsset-1.html",
    "title": "Class PlantAsset<T> | SoyWar - Simple Plant Growth",
    "keywords": "Class PlantAsset<T> Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object ScriptableObject / Implemented in: SoyWar.SimplePlantGrowth.dll Description Represents all kind of plants. Syntax public abstract class PlantAsset<T> : ScriptableObject where T : PlantAsset<T> Type Parameters Name Description T Properties Destroy Destroys the plant when moving on to the next phase. Declaration public bool Destroy { get; set; } Property Value Type Description Boolean GrowthTime Growth time Declaration public float GrowthTime { get; set; } Property Value Type Description Single Remarks When a value is set, disables random growth time. HasNextStep Check whether the next phase leads to plant growth or destruction. Declaration public bool HasNextStep { get; } Property Value Type Description Boolean Height Height Declaration public float Height { get; set; } Property Value Type Description Single Remarks When a value is set, disables random height. LockWidthToHeight Locks width to height. Declaration public bool LockWidthToHeight { get; set; } Property Value Type Description Boolean MaxGrowthTime Maximum growth time Declaration public float MaxGrowthTime { get; set; } Property Value Type Description Single Remarks When a value is set, enables random growth time. MaxHeight Maximum height Declaration public float MaxHeight { get; set; } Property Value Type Description Single Remarks When a value is set, enables random height. MaxWidth Maximum width Declaration public float MaxWidth { get; set; } Property Value Type Description Single Remarks When a value is set and width doesn't locks to height, enables random width. When a value is set and width is locked to height, ratio is modified. MinGrowthTime Minimum growth time Declaration public float MinGrowthTime { get; set; } Property Value Type Description Single Remarks When a value is set, enables random growth time. MinHeight Minimum height Declaration public float MinHeight { get; set; } Property Value Type Description Single Remarks When a value is set, enables random height. MinWidth Minimum width Declaration public float MinWidth { get; set; } Property Value Type Description Single Remarks When a value is set and width doesn't locks to height, enables random width. When a value is set and width is locked to height, ratio is modified. Next The next phase of plant growth. Declaration public T Next { get; set; } Property Value Type Description T Prototype GameObject associated with the plant. Declaration public virtual GameObject Prototype { get; set; } Property Value Type Description GameObject RandomGrowthTime Activates random growth time. Declaration public bool RandomGrowthTime { get; set; } Property Value Type Description Boolean RandomHeight Activates random height. Declaration public bool RandomHeight { get; set; } Property Value Type Description Boolean RandomWidth Activates random width. Declaration public bool RandomWidth { get; set; } Property Value Type Description Boolean Ratio Ratio between width and height. Declaration public float Ratio { get; set; } Property Value Type Description Single Remarks When a value is set, locks width to height. Width Width Declaration public float Width { get; set; } Property Value Type Description Single Remarks When a value is set and width doesn't locks to height, disables random width. When a value is set and width is locked to height, ratio is modified. Methods CopyFrom(T) Declaration protected virtual void CopyFrom(T asset) Parameters Type Name Description T asset Duplicate() Create a copy of asset. Declaration public T Duplicate() Returns Type Description T SetMinMaxGrowthTime(Single, Single) Defines the random range of growth time. Declaration public void SetMinMaxGrowthTime(float min, float max) Parameters Type Name Description Single min Minimum growth time. Single max Maximum growth time. Remarks Enables random growth time. SetMinMaxHeight(Single, Single) Defines the random range of height. Declaration public void SetMinMaxHeight(float min, float max) Parameters Type Name Description Single min Minimum height. Single max Maximum height. Remarks Enables random height. SetMinMaxWidth(Single, Single) Defines the random range of width. Declaration public void SetMinMaxWidth(float min, float max) Parameters Type Name Description Single min Minimum growth time. Single max Maximum growth time. Remarks Enables random width. Validate() Checks whether asset is valid. Declaration public bool Validate() Returns Type Description Boolean Validate(out String) Checks whether asset is valid. Declaration public abstract bool Validate(out string errorMessage) Parameters Type Name Description String errorMessage Error message when asset is invalid. Returns Type Description Boolean"
  },
  "api/SoyWar.SimplePlantGrowth.PlantComponent-3.html": {
    "href": "api/SoyWar.SimplePlantGrowth.PlantComponent-3.html",
    "title": "Class PlantComponent<T1, T2, T3> | SoyWar - Simple Plant Growth",
    "keywords": "Class PlantComponent<T1, T2, T3> Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object Component Behaviour MonoBehaviour / Implemented in: SoyWar.SimplePlantGrowth.dll Syntax [DisallowMultipleComponent] public abstract class PlantComponent<T1, T2, T3> : MonoBehaviour where T1 : PlantAsset<T1> where T2 : struct, IEquatable<T2> where T3 : struct, IEquatable<T3>, IComparable<T3> Type Parameters Name Description T1 Asset T2 Index/Position T3 Data (Including the time to growth to the next phase) Properties AssetsTimeout Declaration protected Dictionary<T1, Queue<(T2, T3)>> AssetsTimeout { get; } Property Value Type Description Dictionary <T1, Queue < (T1, T2) <T2, T3>>> Data Data used to manage the plants growth. Declaration public Dictionary<T1, Queue<(T2, T3)>> Data { get; set; } Property Value Type Description Dictionary <T1, Queue < (T1, T2) <T2, T3>>> Dynamic Declaration public bool Dynamic { get; } Property Value Type Description Boolean See Also Dynamic GrownEvent Event triggered when plant phase changes. Declaration public UnityEvent<T1, T1, T2> GrownEvent { get; } Property Value Type Description UnityEvent <T1, T1, T2> InitAuto Declaration public bool InitAuto { get; } Property Value Type Description Boolean See Also InitAuto Override Allow overriding the default parameters used by ManagerComponent . Declaration public bool Override { get; } Property Value Type Description Boolean Terrain Terrain Declaration public Terrain Terrain { get; } Property Value Type Description Terrain Methods AddAssets(T1[]) Add plant assets. Declaration public abstract void AddAssets(params T1[] assets) Parameters Type Name Description T1[] assets Awake() Declaration protected virtual void Awake() GetTime() Time value used to determine the growth timestamp. Declaration public float GetTime() Returns Type Description Single RemoveAssets(T1[]) Remove plant assets. Declaration public abstract void RemoveAssets(params T1[] assets) Parameters Type Name Description T1[] assets Remarks Deletes instances associated with assets from the growth process."
  },
  "api/SoyWar.SimplePlantGrowth.TreeAsset.html": {
    "href": "api/SoyWar.SimplePlantGrowth.TreeAsset.html",
    "title": "Class TreeAsset | SoyWar - Simple Plant Growth",
    "keywords": "Class TreeAsset Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object ScriptableObject PlantAsset < TreeAsset > / Implemented in: SoyWar.SimplePlantGrowth.dll Syntax [CreateAssetMenu(fileName = \"Tree Growth Phase\", menuName = \"Simple Plant Growth/Tree\", order = 1002)] public sealed class TreeAsset : PlantAsset<TreeAsset> Properties BendFactor Declaration public float BendFactor { get; set; } Property Value Type Description Single NavMeshLod Declaration public int NavMeshLod { get; set; } Property Value Type Description Int32 Methods CopyFrom(TreeAsset) Declaration protected override void CopyFrom(TreeAsset asset) Parameters Type Name Description TreeAsset asset Overrides SoyWar.SimplePlantGrowth.PlantAsset<SoyWar.SimplePlantGrowth.TreeAsset>.CopyFrom(SoyWar.SimplePlantGrowth.TreeAsset) Operators Implicit(TreeAsset to TreePrototype) Convert TreeAsset to TreePrototype. Declaration public static implicit operator TreePrototype(TreeAsset treeAsset) Parameters Type Name Description TreeAsset treeAsset Returns Type Description TreePrototype Implicit(TreePrototype to TreeAsset) Convert TreePrototype to TreeAsset. Declaration public static implicit operator TreeAsset(TreePrototype treePrototype) Parameters Type Name Description TreePrototype treePrototype Returns Type Description TreeAsset"
  },
  "api/SoyWar.SimplePlantGrowth.TreeComponent.html": {
    "href": "api/SoyWar.SimplePlantGrowth.TreeComponent.html",
    "title": "Class TreeComponent | SoyWar - Simple Plant Growth",
    "keywords": "Class TreeComponent Related to: SoyWar.SimplePlantGrowth / Inherits from: Object Object Component Behaviour MonoBehaviour PlantComponent < TreeAsset , Int32 , Single > / Implemented in: SoyWar.SimplePlantGrowth.dll Syntax [AddComponentMenu(\"Simple Plant Growth/Tree Growth Terrain Manager\")] public sealed class TreeComponent : PlantComponent<TreeAsset, int, float> Methods AddInstances(Int32[]) Tree instances to include from the growth process. Declaration public void AddInstances(params int[] instances) Parameters Type Name Description Int32 [] instances Remarks The asset associated with the instance must have been added beforehand. RemoveInstances(Int32[]) Tree instances to exclude from the growth process. Declaration public void RemoveInstances(params int[] instances) Parameters Type Name Description Int32 [] instances"
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog | SoyWar - Simple Plant Growth",
    "keywords": "Changelog [1.0.0] - 2023-12-01 Added Initial Release"
  },
  "docs/how-to/add-grass.html": {
    "href": "docs/how-to/add-grass.html",
    "title": "How to add grass | SoyWar - Simple Plant Growth",
    "keywords": "How to add grass Steps Add \"Plant Growth Phase Manager\" component to a GameObject Create a \"Grass Growth Phase\" asset Configure the asset Add \"Grass Growth Terrain Manager\" component in the same place as the \"Terrain\" component Insert the desired phase in the field of the component and click on the \"Add\" button Select \"Paint Details\" on the \"Terrain\" component and use the new prototype added to the terrain through the \"Scene\" window Result"
  },
  "docs/how-to/add-tree.html": {
    "href": "docs/how-to/add-tree.html",
    "title": "How to add a tree | SoyWar - Simple Plant Growth",
    "keywords": "How to add a tree Steps Add \"Plant Growth Phase Manager\" component to a GameObject Create a \"Tree Growth Phase\" asset Configure the asset Add \"Tree Growth Terrain Manager\" component in the same place as the \"Terrain\" component Insert the desired phase in the field of the component and click on the \"Add\" button Select \"Paint Trees\" on the \"Terrain\" component and use the new prototype added to the terrain through the \"Scene\" window Result"
  },
  "docs/how-to/update-grass.html": {
    "href": "docs/how-to/update-grass.html",
    "title": "How to update grass | SoyWar - Simple Plant Growth",
    "keywords": "How to update grass Steps Select \"Paint Details\" on \"Terrain\" component Select the prototype to update Insert the desired phase in the field of the \"Grass Growth Terrain Manager\" component and click on the \"Update\" button"
  },
  "docs/how-to/update-tree.html": {
    "href": "docs/how-to/update-tree.html",
    "title": "How to update a tree | SoyWar - Simple Plant Growth",
    "keywords": "How to update a tree Steps Select \"Paint Trees\" on \"Terrain\" component Select the prototype to update Insert the desired phase in the field of the \"Tree Growth Terrain Manager\" component and click on the \"Update\" button"
  },
  "index.html": {
    "href": "index.html",
    "title": "Let it Grow with Simple Plant Growth | SoyWar - Simple Plant Growth",
    "keywords": "Let it Grow with Simple Plant Growth Quick Start"
  }
}